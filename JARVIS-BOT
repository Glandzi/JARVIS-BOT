

_get_repolink () {
    local regex
    regex='(https?)://github.com/.+/.+'
    if [[ $JARVIS_REPO == "JARVIS-BOT" ]]
    then
        echo "aHR0cHM6Ly9naXRodWIuY29tL0pBUlZJUy1VU0VSQk9UL0pBUlZJUy1EQVRBLUJBU0UvYXJjaGl2ZS9tYXN0ZXIuemlw" | base64 -d
    elif [[ $JARVIS_REPO == "JARVIS-BOT" ]]
    then
        echo "aHR0cHM6Ly9naXRodWIuY29tL0pBUlZJUy1VU0VSQk9UL0pBUlZJUy1EQVRBLUJBU0UvYXJjaGl2ZS9tYXN0ZXIuemlw" | base64 -d
    elif [[ $JARVIS_REPO =~ $regex ]]
    then
        if [[ $JARVIS_REPO_BRANCH ]]
        then
            echo "${JARVIS_REPO}/archive/${JARVIS_REPO_BRANCH}.zip"
        else
            echo "${JARVIS_REPO}/archive/master.zip"
        fi
    else
        echo "aHR0cHM6Ly9naXRodWIuY29tL0pBUlZJUy1VU0VSQk9UL0pBUlZJUy1EQVRBLUJBU0UvYXJjaGl2ZS9tYXN0ZXIuemlw" | base64 -d
    fi
}


_set_bot () {
    local zippath
    zippath="JARVIS-BOT.zip"
    echo "DOWNLOADING JARVIS SOURCE CODE...."
    wget -q $(_get_repolink) -O "$zippath"
    echo "READING DATA"
    JARVISPATH=$(zipinfo -1 "$zippath" | grep -v "/.");
    unzip -qq "$zippath"
    echo "Done"
    echo "JARVIS-BOT 1.0"
    rm -rf "$zippath"
    sleep 5
    cd $JARVISPATH
    echo "~STARTING JARVIS-BOT~"
    echo "
    JARVIS COMING ONLINE
    "
    
    cd
    python3 ../setup/updater.py ../requirements.txt requirements.txt
    python3 -m userbot
}

_set_bot
